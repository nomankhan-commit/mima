
@{
    //ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    Html.RenderPartial("~/Views/Shared/navBar.cshtml");
}
@*<style>
       .form-control { display: inline-block !important; }

    </style>*@

<style>
    .form-control {
        border: 1px solid white;
        border-radius: 5px;
    }
</style>

<div class="row text-center">
    <div class="col-md-12"><img src="~/Content/img/mima-constructionLogo.png" /></div>
    <div class="col-md-12"><h3>Cash Reciept</h3></div>

</div>
<div class="myDiv">
    <div class="row">

        <div class="col-md-12">

            @using (Html.BeginForm("AddCashReceiptVoucher", "Reciept", FormMethod.Post, new { id = "AddBankReceiptVoucher" }))
            {
                <div class="formInnerDiv">
                    <input type="checkbox" class="ispending-checkBox" name="isPending" value="true" id="isPending" style="display:none" />
                    @*Submit as a Pending*@

                    <div class="form-group">
                        <label for="email">V.no:</label>
                        <input type="text" class="form-control borderRem width-sm" id="" name="VNumber" value="@ViewBag.vNum"  autocomplete="off" readonly required>
                    </div>
                    <div class="form-group">
                        <label for="pwd">Date:</label>
                        <input type="text" class="form-control borderRem width-sm" id="date"  name="Date" required readonly autocomplete="off">
                    </div>
                    @*<div class="form-group">
                        <label for="pwd">Cheque_No:</label>
                        <input type="text" class="form-control borderRem width-sm" id="date"  name="Cheque_No" required autocomplete="off">
                    </div>*@
                    <div class="form-group">
                        <label for="sel1">Category:</label>
                        <select class="form-control width-sm" id="categoryDropDown" name="Category">

                            @{
                                foreach (var item in ViewBag.category)
                                {

                                    <option value="@item.Category1">@item.Category1</option>
                                }

                            }
                        </select>
                        <!--br-->
                    </div>
                </div>
                <div class="form-group">
                    <label for="sel1">Received_From:</label>
                    <select class="form-control borderRem width-lg" id="Received_From" name="Received_From">

                        @foreach (var item in ViewBag.ControlDetails)
                        {
                            @*<option value="@item.id">@item.Bank1</option>*@
                            <option value="@item.Control">@item.Control</option>
                        }
                    </select>
                    <!--br-->

                </div>
                

                <div class=""></div>
                <div class="form-group">
                    <label for="pwd">Amount:</label>
                    <input type="text" class="form-control borderRem width-lg amount" autocomplete="off" onkeyup="amount.innerHTML=convertNumberToWords(this.value)" id="amount" name="AmountWithComma" required>
                </div>
                <div class="form-group">
                    <label for="pwd">Rupees:</label>
                    <input type="text" class="form-control borderRem width-lg" autocomplete="off" id="rupees" readonly name="Rupees" required>
                </div>
                <div class="form-group">
                    <label for="pwd">A/C_Description:</label>
                    <input type="text" class="form-control borderRem width-lg" autocomplete="off" id="amount" name="A_C_Description" required>
                </div>


                            <div class="form-group">
                                <label for="pwd">Narration:</label>
                                <input type="text" class="form-control borderRem width-lg" autocomplete="off" id="Narration" name="Narration" required>
                            </div>


                            <button type="button" id="printPdf" class="btn btn-success submitBtn">Print</button>
                            @*<button type="submit" class="btn btn-primary">Submit</button>*@
                            <button type="button" id="resetBtn__" class="btn btn-danger">Reset</button>
                            <button type="submit" class="btn btn-light btnPending">Pending</button>


            }

        </div>
    </div>
    <div id="editor"></div>
</div>
<script>


    $(document).ready(function () {
        //-------------
        // document.addEventListener('DOMContentLoaded', () => {
        new Cleave('.amount', {
            numeral: true,
            numeralThousandsGroupStyle: 'thousand'
        });
        // });
      


            //AJaxHelper.AjaxReqProcessor($("form").serialize(), false, 'Json', 'Post', 'shartRecCach', 'Index');
            //if (AJaxHelper.result != null) {
             
            //    debugger
            //    printPreview(AJaxHelper.result)



            //}


        //})

        $("#printPdf").click(function () {
            debugger;
            var isEmpty = false;
            $("input").each(function () {
                debugger;

                if ($(this).val() == "") {

                    $(this).css('border-color', 'red');
                    isEmpty = true;

                } else {
                    $(this).css('border-color', 'white');

                }

            })
            if (!isEmpty) {
                AJaxHelper.AjaxReqProcessor($("form").serialize(), false, 'Json', 'Post', 'shartRecCach', 'Index');
                if (AJaxHelper.result != null) {

                    printPreview(AJaxHelper.result)

                } else {
                    return false;

                }
            }
        })
        ///------------
        function printPreview(data) {
            var type = 'application/pdf';
            let blob = null;
            const blobURL = URL.createObjectURL(pdfBlobConversion(data, 'application/pdf'));
            const theWindow = window.open(blobURL);
            const theDoc = theWindow.document;
            const theScript = document.createElement('script');
            function injectThis() {
                window.print();
            }
            theScript.innerHTML = 'window.onload = ${injectThis.toString()};';
            theDoc.body.appendChild(theScript);
        }
        //converts base64 to blob type for windows
        function pdfBlobConversion(b64Data, contentType) {
            contentType = contentType || '';
            var sliceSize = 512;
            b64Data = b64Data.replace(/^[^,]+,/, '');
            b64Data = b64Data.replace(/\s/g, '');
            var byteCharacters = window.atob(b64Data);
            var byteArrays = [];

            for (var offset = 0; offset < byteCharacters.length; offset = offset + sliceSize) {
                var slice = byteCharacters.slice(offset, offset + sliceSize);

                var byteNumbers = new Array(slice.length);
                for (var i = 0; i < slice.length; i++) {
                    byteNumbers[i] = slice.charCodeAt(i);
                }

                var byteArray = new Uint8Array(byteNumbers);

                byteArrays.push(byteArray);
            }

            var blob = new Blob(byteArrays, { type: contentType });
            return blob;
        }
        ///--------------
    //-----------
        //--------date work--------//
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth());
        var yyyy = today.getFullYear()

        const monthNames = ["January", "February", "March", "April", "May", "June",
  "July", "August", "September", "October", "November", "December"
        ];

        var month = monthNames[today.getMonth()];
        var todayDate = dd + "/" + month + "/" + yyyy

        $("#date").val(todayDate);
        //--------date work--------//


    })//end document .ready




    //------amount to words------//

    function convertNumberToWords(amount) {
        var words = new Array();
        words[0] = '';
        words[1] = 'One';
        words[2] = 'Two';
        words[3] = 'Three';
        words[4] = 'Four';
        words[5] = 'Five';
        words[6] = 'Six';
        words[7] = 'Seven';
        words[8] = 'Eight';
        words[9] = 'Nine';
        words[10] = 'Ten';
        words[11] = 'Eleven';
        words[12] = 'Twelve';
        words[13] = 'Thirteen';
        words[14] = 'Fourteen';
        words[15] = 'Fifteen';
        words[16] = 'Sixteen';
        words[17] = 'Seventeen';
        words[18] = 'Eighteen';
        words[19] = 'Nineteen';
        words[20] = 'Twenty';
        words[30] = 'Thirty';
        words[40] = 'Forty';
        words[50] = 'Fifty';
        words[60] = 'Sixty';
        words[70] = 'Seventy';
        words[80] = 'Eighty';
        words[90] = 'Ninety';
        amount = amount.toString();
        var atemp = amount.split(".");
        var number = atemp[0].split(",").join("");
        var n_length = number.length;
        var words_string = "";
        if (n_length <= 9) {
            var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);
            var received_n_array = new Array();
            for (var i = 0; i < n_length; i++) {
                received_n_array[i] = number.substr(i, 1);
            }
            for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {
                n_array[i] = received_n_array[j];
            }
            for (var i = 0, j = 1; i < 9; i++, j++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    if (n_array[i] == 1) {
                        n_array[j] = 10 + parseInt(n_array[j]);
                        n_array[i] = 0;
                    }
                }
            }
            value = "";
            for (var i = 0; i < 9; i++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    value = n_array[i] * 10;
                } else {
                    value = n_array[i];
                }
                if (value != 0) {
                    words_string += words[value] + " ";
                }
                if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Crores ";
                }
                if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Lakhs ";
                }
                if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Thousand ";
                }
                if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {
                    words_string += "Hundred and ";
                } else if (i == 6 && value != 0) {
                    words_string += "Hundred ";
                }
            }
            words_string = words_string.split("  ").join(" ");
        }

        $('#rupees').val(words_string);
        return words_string;


    }

    //------amount to words------//





</script>